[
["intro.html", "章节 1 recharts介绍", " 章节 1 recharts介绍 "],
["recharts.html", "章节 2 recharts 2.1 recharts的安装(Installation)", " 章节 2 recharts A R interface to ECharts for data visualization. recharts 提供了百度开源可视化js框架ECharts(4.0.0)的R语言接口，现提供的图形展示接口包括：地图（eMap），柱状图（eBar），折线图（eLine）， 雷达图（eRadar），散点图（ePoints），漏斗图（eFunnel）以及万恶的饼图（ePie）。 同时计划对力导向图（eForce）， 时间序列散点图(ePoints_timeSeries)， 矩阵树图(eTree)， 平行坐标图(eParallel) 和桑基图（eSankey）图逐一实现。 2.1 recharts的安装(Installation) recharts包的源代码在Github/cosname/recharts上提供下载与安装，安装需要使用以下代码： require(devtools) devtools::install_github(&quot;cosname/recharts&quot;) 目前计划任务列表在https://github.com/cosname/recharts/issues/43 欢迎贡献issue以及贡献代码 "],
["interface.html", "章节 3 案例及接口 3.1 官网案例(echartsExample) 3.2 从R对象中绘图(ePlot)", " 章节 3 案例及接口 3.1 官网案例(echartsExample) echartsExample提供了一种从官网的官方实例中获取JS代码并运行的途径, 除去某些需要加载JSON数据文件的例子, echartsExample`支持大部分Echarts的官网案例. 这个函数支持的范围比较广, 包括Echarts的基本绘图, ecstat, bamap等高级功能, 是JS代码的源生接口 EChartsExamples 参数: url 例子的网址, 比如'http://echarts.baidu.com/demo.html#bubble-gradient' JScontent 需要执行的JS代码(方便复制例子里面的代码调试执行), 注意要命名一个option对象用于数据加载 height 绘图区域的高度 weight 绘图区域的宽度, 支持百分比 3.1.1 官网案例 从http://echarts.baidu.com/demo.html#effectScatter-bmap 获取代码, 并转换为R绘图. library(recharts) echartsExample(&quot;http://echarts.baidu.com/demo.html#effectScatter-bmap&quot;) 3.1.2 JS代码案例 在R的环境中基于源生JS代码执行echarts绘图. JScodes = &quot; var option = { title: { text: &#39;ECharts entry example&#39; }, tooltip: {}, legend: { data:[&#39;Sales&#39;] }, xAxis: { data: [&#39;shirt&#39;,&#39;cardign&#39;,&#39;chiffon shirt&#39;,&#39;pants&#39;,&#39;heels&#39;,&#39;socks&#39;] }, yAxis: {}, series: [{ name: &#39;Sales&#39;, type: &#39;bar&#39;, data: [5, 20, 36, 10, 10, 20] }] }; &quot; echartsExample(JScontent=JScodes) 3.2 从R对象中绘图(ePlot) R中实现Echarts的形式类似于在R中建立一个List来模拟上例中option对象, 然后通过写好的框架实现Echarts对象的绘制, 其中ePlot, 用于根据一个R的list对象来构建Echarts. 其实, 更粗暴的方式是从htmlwidgets::createWidget('echarts', opt, package = 'recharts')来构建. 参数: series 用于保存echarts中的数据内容, 类似echarts中的option.series ext 用于保存echarts中的其他设置参数, 类似echarts中的option.xAsix等 size 绘图区域的宽度与高度 3.2.1 构建基本对象 我们可以用这个方法构建之前JS实现的例子 # 定义数据部分 series = list(list( name = &#39;Sales&#39;, type = &#39;bar&#39;, data = c(5, 20, 36, 10, 10, 20) )) # 定义坐标轴部分 ext = list( xAxis = list(list( data = c(&#39;shirt&#39;,&#39;cardign&#39;,&#39;chiffon shirt&#39;,&#39;pants&#39;,&#39;heels&#39;,&#39;socks&#39;) )), yAxis = list(list()) ) # 绘制 ePlot(series, ext) 当然, 这个例子可以更粗暴的用htmlwidgets::createWidget实现, 其实你所看到的recharts的例子, 底层都是通过调用这个函数实现的: opt = list( xAxis = list(list( data = c(&#39;shirt&#39;,&#39;cardign&#39;,&#39;chiffon shirt&#39;,&#39;pants&#39;,&#39;heels&#39;,&#39;socks&#39;) )), yAxis = list(list()), series = list(list( name = &#39;Sales&#39;, type = &#39;bar&#39;, data = c(5, 20, 36, 10, 10, 20) )) ) htmlwidgets::createWidget(&#39;echarts&#39;, opt, package = &#39;recharts&#39;) 3.2.2 线柱混合 这是一个用ePlot来实现线柱混合的例子, 原始数据设定来源于Echarts series2 = list( list( name = &#39;蒸发量&#39;, type = &#39;bar&#39;, data = c(2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3) ), list( name = &#39;降水量&#39;, type = &#39;bar&#39;, data = c(2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3) ), list( name = &#39;平均温度&#39;, type = &#39;line&#39;, yAxisIndex = 1, data = c(2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2) ) ) ext = list( xAxis = list(list( type = &quot;category&quot;, data = c(&quot;1月&quot;, &quot;2月&quot;, &quot;3月&quot;, &quot;4月&quot;, &quot;5月&quot;, &quot;6月&quot;, &quot;7月&quot;, &quot;8月&quot;, &quot;9月&quot;, &quot;10月&quot;, &quot;11月&quot;, &quot;12月&quot;) )), yAxis = list( list( type = &#39;value&#39;, name = &#39;水量&#39;, min = 0, max = 250, interval = 50, axisLabel = list( formatter = &#39;{value} ml&#39; ) ), list( type = &#39;value&#39;, name = &#39;温度&#39;, min = 0, max = 25, interval = 5, axisLabel = list( formatter= &#39;{value}℃&#39; ) ) )) ePlot(series2, ext ) "],
["baseFunction.html", "章节 4 基本绘图函数 4.1 散点图 4.2 线图 4.3 条形图 4.4 饼图", " 章节 4 基本绘图函数 4.1 散点图 散点图需要的输入是data.frame，需要指定xvar和yvar， series为可选的颜色分度参数， ePoints(iris[, 3:5], theme = 2) iris$Species &lt;- as.character(iris$Species) iris[1:20, &quot;Species&quot;] = &quot;redFlower&quot; ePoints(iris[,3:5], xvar = ~Petal.Length, yvar = ~Petal.Width, series = ~Species, theme = 1) ePoints(iris[,3:5], xvar = ~Petal.Length, yvar = ~Petal.Width, series = ~Species, theme = 6) 4.2 线图 head(WorldPhones) eLine(WorldPhones, theme=1) ## N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer ## 1951 45939 21574 2876 1815 1646 89 555 ## 1956 60423 29990 4708 2568 2366 1411 733 ## 1957 64721 32510 5230 2695 2526 1546 773 ## 1958 68484 35218 6662 2845 2691 1663 836 ## 1959 71799 37598 6856 3000 2868 1769 911 ## 1960 76036 40341 8220 3145 3054 1905 1008 #mode 2 input. df2 &lt;- data.frame( saleNum=c(10,20,30,40,50,60,70,15,25,35,45,55,65,75,25,35,45,55,65,75,85), seller=c(rep(&quot;Yellow&quot;,7), rep(&quot;Red&quot;,7), rep(&quot;White&quot;,7)), weekDay = c(rep(c(&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thu&quot;,&quot;Fri&quot;,&quot;Sat&quot;,&quot;Sun&quot;),3)), stringsAsFactors =FALSE ) eLine(df2, xvar=~weekDay, yvar= ~saleNum, series=~seller) dat &lt;- cut(rnorm(1000), -4:4) eLine(dat) 4.3 条形图 require(plyr) ## Loading required package: plyr dat = ddply(iris, .(Species), colwise(mean)) rownames(dat) = dat[,1] dat = dat[, -1] dat ## Sepal.Length Sepal.Width Petal.Length Petal.Width ## redFlower 5.035000 3.480000 1.435 0.2350000 ## setosa 4.986667 3.393333 1.480 0.2533333 ## versicolor 5.936000 2.770000 4.260 1.3260000 ## virginica 6.588000 2.974000 5.552 2.0260000 eBar(dat) eBar(dat, horiz = TRUE) #mode 2 input. df2 &lt;- data.frame( saleNum=c(10,20,30,40,50,60,70,15,25,35,45,55,65,75,25,35,45,55,65,75,85), seller=c(rep(&quot;Yellow&quot;,7), rep(&quot;Red&quot;,7), rep(&quot;White&quot;,7)), weekDay = c(rep(c(&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thu&quot;,&quot;Fri&quot;,&quot;Sat&quot;,&quot;Sun&quot;),3)), stringsAsFactors =FALSE ) dat &lt;- df2 xvar=~weekDay; yvar= ~saleNum; series=~seller eBar(df2, xvar = ~seller, ~saleNum, ~weekDay ) eBar(df2, xvar = ~seller, ~saleNum, ~weekDay, stack=T) eBar(df2, xvar = ~seller, ~saleNum, ~weekDay, stackGroup = list(c(&#39;Sat&#39;,&#39;Sun&#39;))) dat &lt;- df2[1:7,] eBar(dat, ~weekDay, ~saleNum) dat &lt;- cut(rnorm(1000), -4:4) eBar(dat) 4.4 饼图 x = runif(6) names(x) = LETTERS[1:6] ePie(x) + eTitle(&quot;test&quot;) testData &lt;- head(mapTestData_chs, 5) ePie(testData, ~stdName, ~val1) x = runif(6) names(x) = LETTERS[1:6] ePie(x,reset_radius = c(80,120),showL = T,labelformatter = &quot;{b}:{c}&quot;) "],
["nbFunction.html", "章节 5 高级绘图函数 5.1 堆砌区域图 5.2 K线图 5.3 漏斗图 5.4 平行坐标 5.5 雷达图 5.6 水球图 5.7 桑基图 5.8 词云 5.9 地图", " 章节 5 高级绘图函数 5.1 堆砌区域图 require(plyr) eArea(WorldPhones, theme=1) #mode 2 input. df2 &lt;- data.frame( saleNum=c(10,20,30,40,50,60,70,15,25,35,45,55,65,75,25,35,45,55,65,75,85), seller=c(rep(&quot;Yellow&quot;,7), rep(&quot;Red&quot;,7), rep(&quot;White&quot;,7)), weekDay = c(rep(c(&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thu&quot;,&quot;Fri&quot;,&quot;Sat&quot;,&quot;Sun&quot;),3)), stringsAsFactors =FALSE ) eArea(df2, xvar=~weekDay, yvar= ~saleNum, series=~seller) dat &lt;- cut(rnorm(1000), -4:4) eArea(dat) 5.2 K线图 mat = rbind(c(2286.33,2299.99,2281.9,2309.39), c(2297.11,2305.11,2290.12,2305.3), c(2303.75,2302.4,2292.43,2314.18), c(2293.81,2275.67,2274.1,2304.95), c(2281.45,2288.53,2270.25,2292.59), c(2286.66,2293.08,2283.94,2301.7), c(2293.4,2321.32,2281.47,2322.1), c(2323.54,2324.02,2321.17,2334.33), c(2316.25,2317.75,2310.49,2325.72), c(2320.74,2300.59,2299.37,2325.53), c(2300.21,2299.25,2294.11,2313.43), c(2297.1,2272.42,2264.76,2297.1), c(2270.71,2270.93,2260.87,2276.86), c(2264.43,2242.11,2240.07,2266.69), c(2242.26,2210.9,2205.07,2250.63), c(2190.1,2148.35,2126.22,2190.1) ) rownames(mat) = Sys.Date()-(16:1) eCandle(mat) eCandle(mat, theme = 1) 5.3 漏斗图 x = c(&quot;Exposure&quot; = 100, &quot;Click&quot; = 80, &quot;Visit&quot; = 60, &quot;Query&quot;=40, &quot;Buy&quot;=20) eFunnel(x) +eTitle(title = &quot;Funnel Plot&quot;) funnelDf &lt;- data.frame(namevar = c(&quot;Exposure&quot;, &quot;Click&quot;, &quot;Visit&quot;, &quot;Query&quot;, &quot;Buy&quot;), datavar = c(100, 80, 60, 40, 20), stringsAsFactors=FALSE) eFunnel(funnelDf, ~namevar, ~datavar, theme =1) 5.4 平行坐标 require(plyr) axisList = list( list(index=7, type=&quot;category&quot;, data = c(&quot;low&quot;, &quot;middle&quot;, &quot;high&quot;)), list(index=6, inverse=TRUE, max=50, nameLocation=&quot;start&quot;) ) eParallel(head(parallelDf, 20), series=~groupName, axisList = axisList) 5.5 雷达图 require(plyr) dat = ddply(iris, .(Species), colwise(mean)) rownames(dat) = dat[,1] dat = dat[, -1] dat ## Sepal.Length Sepal.Width Petal.Length Petal.Width ## redFlower 5.035000 3.480000 1.435 0.2350000 ## setosa 4.986667 3.393333 1.480 0.2533333 ## versicolor 5.936000 2.770000 4.260 1.3260000 ## virginica 6.588000 2.974000 5.552 2.0260000 eRadar(dat) df2 &lt;- data.frame( saleNum=c(10,20,30,40,50,60,70,15,25,35,45,55,65,75,25,35,45,55,65,75,85), seller=c(rep(&quot;Yellow&quot;,7), rep(&quot;Red&quot;,7), rep(&quot;White&quot;,7)), weekDay = c(rep(c(&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thu&quot;,&quot;Fri&quot;,&quot;Sat&quot;,&quot;Sun&quot;),3)) ) dat &lt;- df2 xvar=~weekDay; yvar= ~saleNum; series=~seller eRadar(df2, ~weekDay, ~saleNum, ~seller) dat = data.frame(IE8 = (40 - 1:28) * 10, IE9 = (38 - 1:28) * 4 + 60, Safari = 1:28 * 5 + 10, Firefox = 1:28 * 9, Chrome = 1:28 * 1:28 /2) row.names(dat) = 2001:2028 chart = eRadar(dat, ymax = rep(400,5)) chart$x$visualMap=list(color=c(&#39;red&#39;,&#39;yellow&#39;)) chart 5.6 水球图 eLiquid(0.6) eLiquid(0.6,wave = 6) 5.7 桑基图 dat = data.frame(source=c(&quot;Agricultural &#39;waste&#39;&quot;,&quot;Bio-conversion&quot;, &quot;Bio-conversion&quot;,&quot;Bio-conversion&quot;,&quot;Bio-conversion&quot;, &quot;Biofuel imports&quot;,&quot;Biomass imports&quot;,&quot;Coal imports&quot;, &quot;Coal reserves&quot;,&quot;Coal&quot;,&quot;District heating&quot;,&quot;District heating&quot;, &quot;District heating&quot;,&quot;Electricity grid&quot;,&quot;Electricity grid&quot;), target=c(&quot;Bio-conversion&quot;,&quot;Liquid&quot;,&quot;Losses&quot;,&quot;Solid&quot;,&quot;Gas&quot;,&quot;Liquid&quot;, &quot;Solid&quot;,&quot;Coal&quot;,&quot;Coal&quot;,&quot;Solid&quot;,&quot;Industry&quot;,&quot;Heating and cooling - commercial&quot;, &quot;Heating and cooling - homes&quot;,&quot;Over generation / exports&quot;,&quot;Heating and cooling - homes&quot;), value=c(124.729,0.597,26.862,280.322,81.144,35,35,11.606,63.965,75.571, 10.639,22.505,46.184,104.453,113.726)) eSankey(dat) 5.8 词云 eWordcloud(wordFreqDf_chs, namevar = ~Word, datavar = ~Freq) 5.9 地图 mapData &lt;- head(mapTestData_chs, 5) eMap(mapData, namevar=~stdName, datavar = ~val1 + val2) provinceMapData &lt;- mapTestData_chs[6:15,] eMap(provinceMapData, namevar=~stdName, datavar = ~val1+val2, region=unique(provinceMapData$motherName)[1]) "],
["supportFunction.html", "章节 6 补充函数 6.1 MarkPoint 6.2 HLine 6.3 VLine 6.4 MarkLine 6.5 eTimeline", " 章节 6 补充函数 6.1 MarkPoint dat &lt;- cut(rnorm(1000), -4:4) chart = eLine(dat) eMarkPoint(chart, type=c(&#39;max&#39;,&#39;min&#39;),valueIndex = 1) eMarkPoint(chart, dat = data.frame(2:3,rep(200,2)), type=c(&#39;max&#39;,&#39;min&#39;),valueIndex = 1) 6.2 HLine chart = ePoints(iris[, 3:5], theme = 2) eHLine(chart,1,lineColor = &#39;blue&#39;) eHLine(chart,&#39;min&#39;,lineWidth = 5) 6.3 VLine eVLine(chart,1,lineColor = &#39;blue&#39;) eVLine(chart,&#39;min&#39;,lineWidth = 5) 6.4 MarkLine eMarkLine(chart, c(1,0), c(7,2.5)) 6.5 eTimeline x = runif(6) names(x) = LETTERS[1:6] e1 = ePie(x) + eTitle(&quot;test1&quot;) x = runif(6) names(x) = LETTERS[1:6] e2 = ePie(x) + eTitle(&quot;test2&quot;) x = runif(6) names(x) = LETTERS[1:6] e3 = ePie(x) + eTitle(&quot;test3&quot;) x = runif(6) names(x) = LETTERS[1:6] e4 = ePie(x) + eTitle(&quot;test4&quot;) eTimeline(e1,e2,e3,e4) "],
["help.html", "章节 7 Introduction", " 章节 7 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 7.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 7.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 7.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 7.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 redFlower 4.9 3.0 1.4 0.2 redFlower 4.7 3.2 1.3 0.2 redFlower 4.6 3.1 1.5 0.2 redFlower 5.0 3.6 1.4 0.2 redFlower 5.4 3.9 1.7 0.4 redFlower 4.6 3.4 1.4 0.3 redFlower 5.0 3.4 1.5 0.2 redFlower 4.4 2.9 1.4 0.2 redFlower 4.9 3.1 1.5 0.1 redFlower 5.4 3.7 1.5 0.2 redFlower 4.8 3.4 1.6 0.2 redFlower 4.8 3.0 1.4 0.1 redFlower 4.3 3.0 1.1 0.1 redFlower 5.8 4.0 1.2 0.2 redFlower 5.7 4.4 1.5 0.4 redFlower 5.4 3.9 1.3 0.4 redFlower 5.1 3.5 1.4 0.3 redFlower 5.7 3.8 1.7 0.3 redFlower 5.1 3.8 1.5 0.3 redFlower You can write citations, too. For example, we are using the bookdown package [@R-bookdown] in this sample book, which was built on top of R Markdown and knitr [@xie2015]. "]
]
